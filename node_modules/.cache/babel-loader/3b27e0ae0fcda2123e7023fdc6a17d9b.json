{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Web\\\\react\\\\Cinema-Client\\\\src\\\\components\\\\body\\\\movies\\\\moviesfilters\\\\MoviesFilters.js\";\nimport React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport '../../Filters.css';\n\nfunction MoviesFilters(props) {\n  const [genres, setGenres] = useState([]);\n  const nameFilterRef = useRef('');\n  const genreFilterRef = useRef('');\n  const getGenres = useCallback(async () => {\n    try {\n      const response = await fetch('getGenres');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      setGenres(data);\n    } catch (error) {}\n  });\n  useEffect(() => {\n    getGenres();\n  }, []);\n  const fetchMoviesHandler = useCallback(async () => {\n    const name = nameFilterRef.current.value;\n    const genre = genreFilterRef.current.value;\n\n    try {\n      let response;\n\n      if (name == '' && genre == '') {\n        response = await fetch('movie/all');\n      }\n\n      if (name.length > 0) response = await fetch('');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      props.setMovies(data);\n    } catch (error) {}\n\n    console.log('name: ' + name + '\\ngenre: ' + genre);\n  }, []);\n\n  const onInputChange = event => {\n    switch (event.target.id) {\n      case 'namefilter':\n        if (nameFilterRef.current.value.length > 0) {\n          document.getElementById('genrefilter').disabled = true;\n        } else {\n          document.getElementById('genrefilter').disabled = false;\n        }\n\n        break;\n\n      case 'genrefilter':\n        if (genreFilterRef.current.value.length > 0) {\n          document.getElementById('namefilter').disabled = true;\n        } else {\n          document.getElementById('namefilter').disabled = false;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Filters\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"filters\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"namefilter\",\n    type: \"text\",\n    onChange: onInputChange,\n    placeholder: \"Movie name\",\n    ref: nameFilterRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"genrefilter\",\n    onChange: onInputChange,\n    ref: genreFilterRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Genre\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"All\"), genres.map(element => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      value: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, element);\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Search\")));\n}\n\nexport default MoviesFilters;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/Web/react/Cinema-Client/src/components/body/movies/moviesfilters/MoviesFilters.js"],"names":["React","useRef","useCallback","useState","useEffect","MoviesFilters","props","genres","setGenres","nameFilterRef","genreFilterRef","getGenres","response","fetch","ok","Error","data","json","error","fetchMoviesHandler","name","current","value","genre","length","setMovies","console","log","onInputChange","event","target","id","document","getElementById","disabled","map","element"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,WAAvB,EAAoCC,QAApC,EAA8CC,SAA9C,QAA8D,OAA9D;AACA,OAAO,mBAAP;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMM,aAAa,GAAGR,MAAM,CAAC,EAAD,CAA5B;AACA,QAAMS,cAAc,GAAGT,MAAM,CAAC,EAAD,CAA7B;AAEA,QAAMU,SAAS,GAAGT,WAAW,CAAC,YAAY;AACtC,QAAI;AACA,YAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAT,MAAAA,SAAS,CAACQ,IAAD,CAAT;AACD,KAPH,CAOI,OAAOE,KAAP,EAAc,CAAE;AACrB,GAT0B,CAA7B;AAWEd,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAOF,QAAMQ,kBAAkB,GAAGjB,WAAW,CAAC,YAAY;AACjD,UAAMkB,IAAI,GAAGX,aAAa,CAACY,OAAd,CAAsBC,KAAnC;AACA,UAAMC,KAAK,GAAGb,cAAc,CAACW,OAAf,CAAuBC,KAArC;;AACE,QAAI;AACF,UAAIV,QAAJ;;AACA,UAAGQ,IAAI,IAAE,EAAN,IAAYG,KAAK,IAAE,EAAtB,EAAyB;AACvBX,QAAAA,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,CAAtB;AACD;;AACD,UAAGO,IAAI,CAACI,MAAL,GAAc,CAAjB,EACEZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,EAAD,CAAtB;;AAEF,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAX,MAAAA,KAAK,CAACmB,SAAN,CAAgBT,IAAhB;AACD,KAbD,CAaE,OAAOE,KAAP,EAAc,CAAE;;AAIlBQ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWP,IAAX,GAAkB,WAAlB,GAAgCG,KAA5C;AAEH,GAtBqC,EAsBnC,EAtBmC,CAAtC;;AAwBA,QAAMK,aAAa,GAAIC,KAAD,IAAW;AAC/B,YAAQA,KAAK,CAACC,MAAN,CAAaC,EAArB;AACE,WAAK,YAAL;AACE,YAAGtB,aAAa,CAACY,OAAd,CAAsBC,KAAtB,CAA4BE,MAA5B,GAAqC,CAAxC,EAA0C;AACxCQ,UAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,QAAvC,GAAkD,IAAlD;AACD,SAFD,MAGI;AACFF,UAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,QAAvC,GAAkD,KAAlD;AACD;;AAED;;AACF,WAAK,aAAL;AACE,YAAGxB,cAAc,CAACW,OAAf,CAAuBC,KAAvB,CAA6BE,MAA7B,GAAsC,CAAzC,EAA2C;AACzCQ,UAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,QAAtC,GAAiD,IAAjD;AACD,SAFD,MAGI;AACFF,UAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,QAAtC,GAAiD,KAAjD;AACD;;AACD;;AACF;AACE;AAnBJ;AAsBD,GAvBD;;AAyBA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAII;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,EAAE,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,QAAQ,EAAEN,aAA7C;AAA4D,IAAA,WAAW,EAAC,YAAxE;AAAqF,IAAA,GAAG,EAAEnB,aAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAGA;AAAQ,IAAA,EAAE,EAAC,aAAX;AAAyB,IAAA,QAAQ,EAAEmB,aAAnC;AAAkD,IAAA,GAAG,EAAElB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAiB,IAAA,QAAQ,MAAzB;AAA0B,IAAA,QAAQ,MAAlC;AAAmC,IAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAEA;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFA,EAGCH,MAAM,CAAC4B,GAAP,CAAWC,OAAO,IAAI;AAAC,wBACpB;AAAQ,MAAA,GAAG,EAAEA,OAAb;AAAsB,MAAA,KAAK,EAAEA,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCA,OAAvC,CADoB;AAEtB,GAFD,CAHD,CAHA,CAFJ,eAeI;AAAQ,IAAA,OAAO,EAAEjB,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,CAJJ,CADJ;AA6BH;;AAED,eAAed,aAAf","sourcesContent":["import React, {useRef, useCallback, useState, useEffect} from \"react\";\r\nimport '../../Filters.css'\r\n\r\nfunction MoviesFilters(props) {\r\n\r\n    const [genres, setGenres] = useState([])\r\n    const nameFilterRef = useRef('')\r\n    const genreFilterRef = useRef('')\r\n    \r\n    const getGenres = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('getGenres');\r\n            if (!response.ok) {\r\n              throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();\r\n            setGenres(data);\r\n          } catch (error) {}\r\n      });\r\n\r\n      useEffect(() => {\r\n        getGenres();\r\n      }, [])\r\n    \r\n\r\n\r\n\r\n    const fetchMoviesHandler = useCallback(async () => {\r\n      const name = nameFilterRef.current.value;\r\n      const genre = genreFilterRef.current.value;\r\n        try {\r\n          let response;\r\n          if(name=='' && genre==''){\r\n            response = await fetch('movie/all');\r\n          }\r\n          if(name.length > 0)\r\n            response = await fetch('')\r\n          \r\n          if (!response.ok) {\r\n            throw new Error('Something went wrong!');\r\n          }\r\n          const data = await response.json();\r\n          props.setMovies(data);\r\n        } catch (error) {}\r\n\r\n\r\n\r\n        console.log('name: ' + name + '\\ngenre: ' + genre);\r\n\r\n    }, []);\r\n\r\n    const onInputChange = (event) => {\r\n      switch (event.target.id) {\r\n        case 'namefilter':\r\n          if(nameFilterRef.current.value.length > 0){\r\n            document.getElementById('genrefilter').disabled = true\r\n          }\r\n          else{\r\n            document.getElementById('genrefilter').disabled = false\r\n          }\r\n\r\n          break;\r\n        case 'genrefilter':\r\n          if(genreFilterRef.current.value.length > 0){\r\n            document.getElementById('namefilter').disabled = true\r\n          }\r\n          else{\r\n            document.getElementById('namefilter').disabled = false\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n    }\r\n\r\n    return (  \r\n        <React.Fragment>\r\n\r\n            <h3>Filters</h3>\r\n\r\n            <div className=\"filters-container\">\r\n                \r\n                <filters>\r\n                <input id='namefilter' type='text' onChange={onInputChange} placeholder='Movie name' ref={nameFilterRef}/>\r\n\r\n                <select id='genrefilter' onChange={onInputChange} ref={genreFilterRef}>\r\n                <option value='' disabled selected hidden>Genre</option>\r\n                <option value='' >All</option>\r\n                {genres.map(element => {return(\r\n                    <option key={element} value={element}>{element}</option>\r\n                )}\r\n                    )}\r\n                </select> \r\n                </filters>\r\n\r\n                <button onClick={fetchMoviesHandler}>Search</button>\r\n\r\n            </div>\r\n\r\n            \r\n\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default MoviesFilters;\r\n\r\n"]},"metadata":{},"sourceType":"module"}