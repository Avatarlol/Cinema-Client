{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Web\\\\react\\\\Cinema-Client\\\\src\\\\components\\\\body\\\\movies\\\\moviesfilters\\\\MoviesFilters.js\";\nimport React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport '../../Filters.css';\n\nfunction MoviesFilters(props) {\n  const [genres, setGenres] = useState([]);\n  const nameFilterRef = useRef('');\n  const genreFilterRef = useRef('');\n  const getGenres = useCallback(async () => {\n    try {\n      const response = await fetch('getGenres');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      setGenres(data);\n    } catch (error) {}\n  }, []);\n  useEffect(() => {\n    getGenres();\n    console.log('genres: ' + genres);\n  }, []);\n  const fetchMoviesHandler = useCallback(async () => {\n    try {\n      const response = await fetch('movie/all');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      props.setMovies(data);\n    } catch (error) {}\n\n    const name = nameFilterRef.current.value;\n    const genre = genreFilterRef.current.value;\n    console.log('name: ' + name + '\\ngenre: ' + genre);\n  }, []);\n\n  function onSearch(event) {}\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Filters\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"filters\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Movie name\",\n    ref: nameFilterRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    ref: genreFilterRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Genre\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"All\"), genres.map(element => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      value: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, element);\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Search\")));\n}\n\nexport default MoviesFilters;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/Web/react/Cinema-Client/src/components/body/movies/moviesfilters/MoviesFilters.js"],"names":["React","useRef","useCallback","useState","useEffect","MoviesFilters","props","genres","setGenres","nameFilterRef","genreFilterRef","getGenres","response","fetch","ok","Error","data","json","error","console","log","fetchMoviesHandler","setMovies","name","current","value","genre","onSearch","event","map","element"],"mappings":"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","sourcesContent":["import React, {useRef, useCallback, useState, useEffect} from \"react\";\r\nimport '../../Filters.css'\r\n\r\nfunction MoviesFilters(props) {\r\n\r\n    const [genres, setGenres] = useState([])\r\n    const nameFilterRef = useRef('')\r\n    const genreFilterRef = useRef('')\r\n    \r\n    const getGenres = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('getGenres');\r\n            if (!response.ok) {\r\n              throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();\r\n            setGenres(data);\r\n          } catch (error) {}\r\n      },[]);\r\n\r\n      useEffect(() => {\r\n        getGenres();\r\n        console.log('genres: ' + genres);\r\n      }, [])\r\n    \r\n\r\n\r\n\r\n    const fetchMoviesHandler = useCallback(async () => {\r\n        try {\r\n          const response = await fetch('movie/all');\r\n          if (!response.ok) {\r\n            throw new Error('Something went wrong!');\r\n          }\r\n          const data = await response.json();\r\n          props.setMovies(data);\r\n        } catch (error) {}\r\n\r\n        const name = nameFilterRef.current.value;\r\n        const genre = genreFilterRef.current.value;\r\n\r\n        console.log('name: ' + name + '\\ngenre: ' + genre);\r\n\r\n    }, []);\r\n\r\n    function onSearch(event) {\r\n\r\n\r\n\r\n    }\r\n\r\n    return (  \r\n        <React.Fragment>\r\n\r\n            <h3>Filters</h3>\r\n\r\n            <div className=\"filters-container\">\r\n                \r\n                <filters>\r\n                <input type='text' placeholder='Movie name' ref={nameFilterRef}/>\r\n\r\n                <select ref={genreFilterRef}>\r\n                <option value='' disabled selected hidden>Genre</option>\r\n                <option value='' >All</option>\r\n                {genres.map(element => {return(\r\n                    <option key={element} value={element}>{element}</option>\r\n                )}\r\n                    )}\r\n                </select> \r\n                </filters>\r\n\r\n                <button onClick={fetchMoviesHandler}>Search</button>\r\n\r\n            </div>\r\n\r\n            \r\n\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default MoviesFilters;\r\n\r\n"]},"metadata":{},"sourceType":"module"}