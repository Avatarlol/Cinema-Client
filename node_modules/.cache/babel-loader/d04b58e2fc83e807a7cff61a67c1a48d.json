{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Web\\\\react\\\\Cinema-Client\\\\src\\\\components\\\\body\\\\admin\\\\forms\\\\movieform\\\\MovieForm.js\";\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport './MovieForm.css';\n\nfunction MovieForm() {\n  const [genres, setGenres] = useState([]);\n  const [error, setError] = useState('');\n  const nameRef = useRef('');\n  const genreRef = useRef('');\n  const lengthRef = useRef('');\n  const imageRef = useRef('');\n  const getGenres = useCallback(async () => {\n    try {\n      const response = await fetch('getGenres');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      setGenres(data);\n    } catch (error) {\n      setError(\"There's an issue with the server.\");\n    }\n  });\n  useEffect(() => {\n    getGenres();\n  }, []);\n\n  const loadImg = () => {\n    const url = document.getElementById('url');\n    const img = document.getElementById('img');\n    img.src = url.value;\n  };\n\n  const addMovieHandler = e => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const parent = document.getElementById('movie-form');\n\n      for (const element of parent) {\n        console.log(element);\n      }\n    } catch (error) {}\n\n    const newMovie = {\n      name: nameRef.current.value,\n      genre: genreRef.current.value,\n      length: lengthRef.current.value,\n      image: imageRef.current.value\n    };\n    console.log(newMovie);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"movie-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, error), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), \"Movie name\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"movie-name\",\n    type: \"text\",\n    ref: nameRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 18\n    }\n  }), \"Genre\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    ref: genreRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, genres.map(element => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: element,\n      value: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, element);\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 18\n    }\n  }), \"Length in minutes\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    style: {\n      width: '80px'\n    },\n    ref: lengthRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 18\n    }\n  }), \"Image URL\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"url\",\n    type: \"url\",\n    style: {\n      width: '50%',\n      maxWidth: '350px'\n    },\n    onBlur: loadImg,\n    ref: imageRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    id: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \" Submit \"));\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/Web/react/Cinema-Client/src/components/body/admin/forms/movieform/MovieForm.js"],"names":["React","useCallback","useState","useEffect","useRef","MovieForm","genres","setGenres","error","setError","nameRef","genreRef","lengthRef","imageRef","getGenres","response","fetch","ok","Error","data","json","loadImg","url","document","getElementById","img","src","value","addMovieHandler","e","preventDefault","parent","element","console","log","newMovie","name","current","genre","length","image","map","width","maxWidth"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport './MovieForm.css'\r\n\r\nfunction MovieForm() {\r\n\r\n    const [genres, setGenres] = useState([])\r\n    const [error, setError] = useState('')\r\n    const nameRef = useRef('')\r\n    const genreRef = useRef('')\r\n    const lengthRef = useRef('')\r\n    const imageRef = useRef('')\r\n\r\n    const getGenres = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('getGenres');\r\n            if (!response.ok) {\r\n              throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();\r\n            setGenres(data);\r\n          } catch (error) {\r\n            setError(\"There's an issue with the server.\")\r\n          }\r\n      });\r\n\r\n      useEffect(() => {\r\n        getGenres();\r\n      }, [])\r\n\r\n      const loadImg = () => {\r\n        const url = document.getElementById('url')\r\n        const img = document.getElementById('img')\r\n          img.src = url.value\r\n      }\r\n\r\n      const addMovieHandler = (e) => {\r\n        e.preventDefault();\r\n        setError('')\r\n        try {\r\n          const parent = document.getElementById('movie-form')\r\n          \r\n          for (const element of parent){\r\n            console.log(element);\r\n          }\r\n          \r\n\r\n          \r\n        } catch (error) {\r\n          \r\n        }\r\n\r\n        const newMovie = {\r\n          name: nameRef.current.value,\r\n          genre: genreRef.current.value,\r\n          length: lengthRef.current.value,\r\n          image: imageRef.current.value\r\n        }\r\n        console.log(newMovie);\r\n      }\r\n\r\n    return ( \r\n        <form id='movie-form'>\r\n            <div className=\"error\">{error}</div>\r\n            <br/>\r\n            Movie name\r\n            <br/>\r\n            <input id='movie-name' type='text' ref={nameRef}/>\r\n            <br/><br/>\r\n            Genre\r\n            <br/>\r\n            <select ref={genreRef}>\r\n                {genres.map(element => {return(\r\n                    <option key={element} value={element}>{element}</option>\r\n                )})}\r\n            </select>\r\n            <br/><br/>\r\n            Length in minutes\r\n            <br/>\r\n            <input type=\"number\" style={{width: '80px'}} ref={lengthRef} required={true}/>\r\n            <br/><br/>\r\n            Image URL\r\n            <br/>\r\n            <input id='url' type='url' style={{width: '50%', maxWidth: '350px'}} onBlur={loadImg} ref={imageRef} required={true}/>\r\n            <img id='img'/>\r\n            <br/><br/>\r\n            <button onClick={addMovieHandler} > Submit </button>\r\n        </form>\r\n     );\r\n}\r\n\r\nexport default MovieForm;"]},"metadata":{},"sourceType":"module"}