{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Web\\\\react\\\\Cinema-Client\\\\src\\\\components\\\\body\\\\movies\\\\movieslist\\\\MoviesList.js\";\nimport React, { useState } from \"react\";\nimport './MoviesList.css';\nimport MovieCard from '../../../cards/moviecard/MovieCard';\n\nfunction MoviesList() {\n  const [movies, setMovies] = useState([]);\n  const fetchMoviesHandler = useCallback(async () => {\n    try {\n      const response = await fetch('test1');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      console.log(data);\n      const transformedMovies = data.map(movieData => {\n        return {\n          id: movieData.imdbID,\n          title: movieData.Title,\n          releaseDate: movieData.Year,\n          image: movieData.Poster\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Movies list\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movieslist-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, movies.map(element => {\n    return /*#__PURE__*/React.createElement(MovieCard, {\n      movie: element,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    });\n  })));\n}\n\nexport default MoviesList;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/Web/react/Cinema-Client/src/components/body/movies/movieslist/MoviesList.js"],"names":["React","useState","MovieCard","MoviesList","movies","setMovies","fetchMoviesHandler","useCallback","response","fetch","ok","Error","data","json","console","log","transformedMovies","map","movieData","id","imdbID","title","Title","releaseDate","Year","image","Poster","error","setError","message","setIsLoading","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;AAEA,SAASC,UAAT,GAAsB;AAElB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMK,kBAAkB,GAAGC,WAAW,CAAC,YAAY;AAC/C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,OAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAMI,iBAAiB,GAAGJ,IAAI,CAACK,GAAL,CAAUC,SAAD,IAAe;AAChD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACE,MADT;AAELC,UAAAA,KAAK,EAAEH,SAAS,CAACI,KAFZ;AAGLC,UAAAA,WAAW,EAAEL,SAAS,CAACM,IAHlB;AAILC,UAAAA,KAAK,EAAEP,SAAS,CAACQ;AAJZ,SAAP;AAMD,OAPyB,CAA1B;AAQArB,MAAAA,SAAS,CAACW,iBAAD,CAAT;AACD,KAhBD,CAgBE,OAAOW,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACE,OAAP,CAAR;AACD;;AACDC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GArBmC,EAqBjC,EArBiC,CAAtC;AAwBA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAII;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEK1B,MAAM,CAACa,GAAP,CAAWc,OAAO,IAAI;AACnB,wBACA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAGH,GAJA,CAFL,CAJJ,CADJ;AAiBH;;AAED,eAAe5B,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport './MoviesList.css';\r\nimport MovieCard from '../../../cards/moviecard/MovieCard'\r\n\r\nfunction MoviesList() {\r\n\r\n    const [movies, setMovies] = useState([])\r\n\r\n    const fetchMoviesHandler = useCallback(async () => {\r\n        try {\r\n          const response = await fetch('test1');\r\n          if (!response.ok) {\r\n            throw new Error('Something went wrong!');\r\n          }\r\n          const data = await response.json();\r\n          console.log(data);\r\n          const transformedMovies = data.map((movieData) => {\r\n            return {\r\n              id: movieData.imdbID,\r\n              title: movieData.Title,\r\n              releaseDate: movieData.Year,\r\n              image: movieData.Poster\r\n            };\r\n          });\r\n          setMovies(transformedMovies);\r\n        } catch (error) {\r\n          setError(error.message);\r\n        }\r\n        setIsLoading(false);\r\n      }, []);\r\n    \r\n\r\n    return ( \r\n        <React.Fragment>\r\n\r\n            <h3>Movies list</h3>\r\n\r\n            <div className=\"movieslist-container\">\r\n\r\n                {movies.map(element => {\r\n                    return(\r\n                    <MovieCard movie={element}/>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n     );\r\n}\r\n\r\nexport default MoviesList;\r\n"]},"metadata":{},"sourceType":"module"}