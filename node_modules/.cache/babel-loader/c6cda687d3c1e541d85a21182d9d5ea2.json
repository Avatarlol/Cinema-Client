{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Web\\\\react\\\\Cinema-Client\\\\src\\\\components\\\\body\\\\admin\\\\forms\\\\eventform\\\\EventForm.js\";\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\n\nfunction EventForm() {\n  const [error, setError] = useState('');\n  const [theaters, setTheaters] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const movieNameRef = useRef('');\n  const theaterIdRef = useRef('');\n  const getTheaters = useCallback(async () => {\n    try {\n      const response = await fetch('getTheaters');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      setTheaters(data);\n    } catch (error) {\n      setError(\"There's an issue with the server.\");\n    }\n  });\n  const getMovies = useCallback(async () => {\n    try {\n      const response = await fetch('movie/all');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      setMovies(data);\n    } catch (error) {\n      setError(\"There's an issue with the server.\");\n    }\n  });\n\n  const addEventHandler = e => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      if (!(document.getElementById('movie-name').checkValidity() && document.getElementById('start-date').checkValidity())) {\n        throw '1';\n      }\n\n      let movie = movies.filter(movie => movie.name == movieNameRef.current.value);\n\n      if (movie.length == 0) {} else {\n        movie = movie[0];\n        const event = {\n          movie: {\n            id: movie.id\n          },\n          theater: {\n            id: theaterIdRef.current.value\n          }\n        };\n        console.log(event);\n      }\n    } catch (error) {\n      switch (error) {\n        case '1':\n          {\n            setError('Fill all the fields!');\n          }\n\n        case '2':\n          {\n            setError('Please select a movie from the dropdown!');\n          }\n      }\n    }\n  };\n\n  useEffect(() => {\n    getTheaters();\n    getMovies();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, error), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), \"Movie name\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"movie-name\",\n    list: \"movielist\",\n    required: true,\n    ref: movieNameRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"movielist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      id: movie.id,\n      key: movie.id,\n      value: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 18\n    }\n  }), \"Starting time\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"start-date\",\n    type: \"datetime-local\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 18\n    }\n  }), \"Theater\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    ref: theaterIdRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, theaters.map(theater => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: theater.id,\n      value: theater.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"#\", theater.theaterNumber, \" (\", theater.seats, \" seats)\");\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addEventHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \" Submit \"));\n}\n\nexport default EventForm;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/Web/react/Cinema-Client/src/components/body/admin/forms/eventform/EventForm.js"],"names":["React","useCallback","useState","useEffect","useRef","EventForm","error","setError","theaters","setTheaters","movies","setMovies","movieNameRef","theaterIdRef","getTheaters","response","fetch","ok","Error","data","json","getMovies","addEventHandler","e","preventDefault","document","getElementById","checkValidity","movie","filter","name","current","value","length","event","id","theater","console","log","map","theaterNumber","seats"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\n\r\nfunction EventForm() {\r\n\r\n    const [error, setError] = useState('')\r\n    const [theaters, setTheaters] = useState([])\r\n    const [movies, setMovies] = useState([])\r\n\r\n    const movieNameRef = useRef('')\r\n    const theaterIdRef = useRef('')\r\n\r\n    const getTheaters = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('getTheaters');\r\n            if (!response.ok) {\r\n              throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();\r\n            setTheaters(data);\r\n          } catch (error) {\r\n            setError(\"There's an issue with the server.\")\r\n          }\r\n    }); \r\n\r\n      const getMovies = useCallback(async () => {\r\n        try {\r\n            \r\n            const response = await fetch('movie/all');\r\n            if (!response.ok) {\r\n              throw new Error('Something went wrong!');\r\n            }\r\n            const data = await response.json();\r\n            setMovies(data);\r\n          } catch (error) {\r\n            setError(\"There's an issue with the server.\")\r\n          }\r\n      }); \r\n\r\n      const addEventHandler = e =>{\r\n        e.preventDefault();\r\n        setError('')\r\n        try {\r\n          if(!(document.getElementById('movie-name').checkValidity() && \r\n          document.getElementById('start-date').checkValidity())){\r\n            throw '1';\r\n          }\r\n        \r\n            let movie = movies.filter(movie => movie.name==movieNameRef.current.value);\r\n            if(movie.length == 0){\r\n                \r\n            }else{\r\n                movie = movie[0]\r\n                const event = {\r\n                    movie: {\r\n                        id: movie.id\r\n                    },\r\n                    theater: {\r\n                        id: theaterIdRef.current.value\r\n                    }\r\n                }\r\n                console.log(event);\r\n            }\r\n          }\r\n        catch (error) {\r\n            switch(error){\r\n              case '1':{setError('Fill all the fields!')}\r\n              case '2':{setError('Please select a movie from the dropdown!')}\r\n            }\r\n              \r\n        }\r\n    }\r\n        \r\n\r\n\r\n    useEffect(() => {\r\n        getTheaters();\r\n        getMovies()\r\n      }, [])\r\n\r\n    return ( \r\n        <form>\r\n            <div className=\"error\">{error}</div>\r\n            <br/>\r\n            Movie name\r\n            <br/>\r\n            <input id='movie-name' list=\"movielist\" required={true} ref={movieNameRef}/>\r\n            <datalist id=\"movielist\">\r\n                {movies.map(movie => {return(\r\n                        <option id={movie.id} key={movie.id} value={movie.name}/>\r\n                    )})}\r\n            </datalist>\r\n            <br/><br/>\r\n            Starting time\r\n            <br/>\r\n            <input id='start-date' type=\"datetime-local\" required={true}/>\r\n            <br/><br/>\r\n            Theater\r\n            <br/>\r\n            <select ref={theaterIdRef} required={true}>\r\n                {theaters.map(theater => {return(\r\n                    <option key={theater.id} value={theater.id}>#{theater.theaterNumber} ({theater.seats} seats)</option>\r\n                )})}\r\n            </select>\r\n            <br/><br/>\r\n            <button onClick={addEventHandler} > Submit </button>\r\n        </form>\r\n     );\r\n}\r\n\r\nexport default EventForm;"]},"metadata":{},"sourceType":"module"}