{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Web\\\\react\\\\Cinema-Client\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const fetchMoviesHandler = useCallback(async () => {\n    try {\n      const response = await fetch('api/all');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json(); //   <h2>{props.title}</h2>\n      //   <h3>{props.releaseDate}</h3>\n      //   <p>{props.openingText}</p>\n      //   <img src={props.image} />\n\n      const transformedMovies = data.map(movieData => {\n        return {\n          id: movieData.imdbID,\n          title: movieData.Title,\n          releaseDate: movieData.Year,\n          image: movieData.Poster\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {//  if error caught, do this\n    }\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  function addMovieHandler(movie) {\n    console.log(movie);\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Found no movies.\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tabs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"hello\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/Web/react/Cinema-Client/src/App.js"],"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovies","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","map","movieData","id","imdbID","title","Title","releaseDate","Year","image","Poster","error","addMovieHandler","movie","console","log","content","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMQ,kBAAkB,GAAGN,WAAW,CAAC,YAAY;AAEjD,QAAI;AACF,YAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB,CANE,CAQJ;AACA;AACA;AACA;;AACE,YAAMC,iBAAiB,GAAGF,IAAI,CAACG,GAAL,CAAUC,SAAD,IAAe;AAChD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACE,MADT;AAELC,UAAAA,KAAK,EAAEH,SAAS,CAACI,KAFZ;AAGLC,UAAAA,WAAW,EAAEL,SAAS,CAACM,IAHlB;AAILC,UAAAA,KAAK,EAAEP,SAAS,CAACQ;AAJZ,SAAP;AAMD,OAPyB,CAA1B;AAQAlB,MAAAA,SAAS,CAACQ,iBAAD,CAAT;AACD,KArBD,CAqBE,OAAOW,KAAP,EAAc,CACd;AACD;AACF,GA1BqC,EA0BnC,EA1BmC,CAAtC;AA4BAzB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,CAACA,kBAAD,CAFM,CAAT;;AAIA,WAASmB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAED,MAAIG,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAd;;AAEA,MAAIzB,MAAM,CAAC0B,MAAP,GAAgB,CAApB,EAAuB;AACrBD,IAAAA,OAAO,gBAAG,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAEzB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD;;AAID,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAUD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  const fetchMoviesHandler = useCallback(async () => {\n\n    try {\n      const response = await fetch('api/all');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n\n    //   <h2>{props.title}</h2>\n    //   <h3>{props.releaseDate}</h3>\n    //   <p>{props.openingText}</p>\n    //   <img src={props.image} />\n      const transformedMovies = data.map((movieData) => {\n        return {\n          id: movieData.imdbID,\n          title: movieData.Title,\n          releaseDate: movieData.Year,\n          image: movieData.Poster\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      //  if error caught, do this\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  function addMovieHandler(movie) {\n    console.log(movie);\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n\n\n  return (\n    <React.Fragment>\n\n      <tabs>hello</tabs>\n\n      {/* <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section> */}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}